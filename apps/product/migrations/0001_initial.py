# Generated by Django 5.2 on 2025-04-12 13:18

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import apps.product.models.product


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "name",
                    models.CharField(max_length=255, unique=True, verbose_name="Category name"),
                ),
                (
                    "name_en",
                    models.CharField(
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Category name",
                    ),
                ),
                (
                    "name_ru",
                    models.CharField(
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Category name",
                    ),
                ),
                (
                    "name_kg",
                    models.CharField(
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Category name",
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="Category slug")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_ru",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_kg",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Reason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "title_en",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                (
                    "title_ru",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                (
                    "title_kg",
                    models.CharField(max_length=255, null=True, verbose_name="Title"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "description_en",
                    models.TextField(null=True, verbose_name="Description"),
                ),
                (
                    "description_ru",
                    models.TextField(null=True, verbose_name="Description"),
                ),
                (
                    "description_kg",
                    models.TextField(null=True, verbose_name="Description"),
                ),
            ],
            options={
                "verbose_name": "Boycott reason",
                "verbose_name_plural": "Boycott reasons",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "name_en",
                    models.CharField(max_length=255, null=True, verbose_name="Name"),
                ),
                (
                    "name_ru",
                    models.CharField(max_length=255, null=True, verbose_name="Name"),
                ),
                (
                    "name_kg",
                    models.CharField(max_length=255, null=True, verbose_name="Name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_ru",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_kg",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "is_boycotted",
                    models.BooleanField(default=False, verbose_name="Is boycotted"),
                ),
                (
                    "query_count",
                    models.IntegerField(default=0, verbose_name="Query count"),
                ),
                (
                    "is_kyrgyz_product",
                    models.BooleanField(default=False, verbose_name="Is kyrgyz product"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=apps.product.models.product.product_image_upload_path,
                        verbose_name="Image",
                    ),
                ),
                (
                    "alternative_products",
                    models.ManyToManyField(
                        blank=True,
                        to="product.product",
                        verbose_name="Alternative products",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="product.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "boycott_reason",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="product.reason",
                        verbose_name="Boycott reason",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        verbose_name="Rating",
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Comment")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="product.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Review",
                "verbose_name_plural": "Reviews",
                "ordering": ["-created_at"],
            },
        ),
    ]
